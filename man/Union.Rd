% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/union.R
\name{union}
\alias{union}
\alias{union.PosReals}
\alias{union.NegReals}
\alias{union.PosRationals}
\alias{union.NegRationals}
\alias{union.PosIntegers}
\alias{union.NegIntegers}
\alias{union.Reals}
\alias{union.Set}
\alias{union.Interval}
\alias{union.FuzzySet}
\alias{union.FuzzyTuple}
\alias{union.ConditionalSet}
\alias{+.Set}
\alias{|.Set}
\title{Union of Two Sets}
\usage{
union(x, y)

\method{union}{PosReals}(x, y)

\method{union}{NegReals}(x, y)

\method{union}{PosRationals}(x, y)

\method{union}{NegRationals}(x, y)

\method{union}{PosIntegers}(x, y)

\method{union}{NegIntegers}(x, y)

\method{union}{Reals}(x, y)

\method{union}{Set}(x, y)

\method{union}{Interval}(x, y)

\method{union}{FuzzySet}(x, y)

\method{union}{FuzzyTuple}(x, y)

\method{union}{ConditionalSet}(x, y)

\method{+}{Set}(x, y)

\method{|}{Set}(x, y)
}
\arguments{
\item{x, y}{Set}
}
\value{
An object inheriting from \code{Set} containing the union of elements in both \code{x} and \code{y}.
}
\description{
Returns the union of two objects inheriting from class \code{Set}.
}
\details{
The union of two sets, \eqn{X, Y}, is defined as the set of elements that exist
in one or both sets,
\deqn{U = \{x, y : x \epsilon X or y \epsilon Y\}}{U = {x, y : x \epsilon X or y \epsilon Y}}

The union of two \link{ConditionalSet}s is defined by combining their defining functions by an
'or', \code{|}, operator. See examples.

\link[base:union]{base::union} is called if \code{x} does not inherit from an R6 class, thus avoiding masking.
}
\examples{
# union of two sets

Set$new(-2:4) + Set$new(2:5)
union(Set$new(1,4,"a"), Set$new("a", 6))

# union of two intervals

Interval$new(1, 10) + Interval$new(5, 15)
Interval$new(1, 2, type = "()") + Interval$new(2, 3, type = "(]")
Interval$new(1, 5, class = "integer") +
    Interval$new(2, 7, class = "integer")

# union of mixed set types

Set$new(1:10) + Interval$new(5, 15)
Set$new(1:10) + Interval$new(5, 15, class = "integer")
Set$new(5,7) | Tuple$new(6, 8, 7)

# union of FuzzySet
FuzzySet$new(1, 0.1, 2, 0.5) + Set$new(2:5)
# not the same when the order is reversed
Set$new(2:5) + FuzzySet$new(1, 0.1, 2, 0.5)

# union of conditional sets

ConditionalSet$new(function(x, y) x >= y) +
    ConditionalSet$new(function(x, y) x == y)
ConditionalSet$new(function(x) x == 2) +
    ConditionalSet$new(function(y) y == 3)

# union of special sets
PosReals$new() + NegReals$new()
Set$new(-Inf, Inf) + Reals$new()

}
